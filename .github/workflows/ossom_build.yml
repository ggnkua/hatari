# Super ripped from https://github.com/msys2/MINGW-packages/blob/master/.github/workflows/main.yml
# and some from https://github.com/ilammy/msvc-dev-cmd/blob/master/.github/workflows/release.yml
#
name: main

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
         #{ msystem: MINGW64, arch: x86_64 },
          { msystem: MINGW32, arch: i686   }
        ]
    steps:

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: git base-devel mingw-w64-${{ matrix.arch }}-toolchain
          #update: true
          release: false

      - uses: actions/checkout@v2

      - name: "Build GUI"
        shell: msys2 {0}
        run: |
          pacman --noconfirm -S make mingw32/mingw-w64-i686-attica-qt5 mingw-w64-i686-SDL2
          cd tools/hrdb
          qmake
          make
          windeployqt release/
          cd release
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libgcc_s_dw2-1.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libstdc++-6.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libbrotlicommon.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libbrotlidec.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libharfbuzz-0.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libglib-2.0-0.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libfreetype-6.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libwinpthread-1.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libgraphite2.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libzstd.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libpcre2-16-0.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libicudt67.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libicuin67.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libicuuc67.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libpcre-1.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libbz2-1.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libdouble-conversion.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/zlib1.dll .
          cp /C/MINGW_INSTALLS=${{ matrix.msystem }}/libpng16-16.dll .
          rm *.cpp
          rm *.o
          zip ../hrdb.zip -r *        

      - name: "Build hatari"
        shell: cmd
        run: |
          cd fastbuild
          fbuild

      - name: "Upload artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.msystem }}-packages
          path: |
              fastbuild/hatari.exe
              tools/hrdb/hrdb.zip
